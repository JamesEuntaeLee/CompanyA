rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User documents
    match /users/{userId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == userId || isAdministrator());
      allow write: if request.auth != null && isAdministrator();
    }

    // Sales data
    match /sales/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdministrator();
    }

    // User preferences (merged userSettings and userPreferences)
    match /userSettings/{userId} {
      allow read: if request.auth != null && 
                  request.auth.uid == userId;
      allow write: if request.auth != null && 
                   request.auth.uid == userId;
    }

    // System-wide settings (admin only)
    match /systemSettings/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdministrator();
    }

    // Admin-specific settings
    match /adminSettings/{userId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == userId || isAdministrator());
      allow write: if request.auth != null && 
                   request.auth.uid == userId && 
                   isAdministrator();
    }

    // Helper function to check administrator status
    function isAdministrator() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "Administrator";
    }
    
    // Additional security for user data
    match /userData/{userId}/private/{document} {
      allow read, write: if request.auth != null && 
                         request.auth.uid == userId;
    }
    
    // Audit logs (read-only for admins)
    match /auditLogs/{document} {
      allow read: if request.auth != null && isAdministrator();
      allow write: if false; // Audit logs should only be written by backend
    }
  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdministrator() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "Administrator";
    }

    match /customers/{document} {
      allow read: if request.auth != null;
      allow write: if false; 
    }

    match /inventory/{document} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    match /product_categories/{document} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    
    match /team_members/{document} {
        allow read: if request.auth != null;
        allow write: if false;
    }
    
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdministrator());
      allow write: if request.auth != null && isAdministrator();
    }

    match /sales/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdministrator();
    }

    match /userSettings/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /systemSettings/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdministrator();
    }
    
    match /adminSettings/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdministrator());
      allow write: if request.auth != null && request.auth.uid == userId && isAdministrator();
    }

    match /userData/{userId}/private/{document} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /auditLogs/{document} {
      allow read: if request.auth != null && isAdministrator();
      allow write: if false;
    }
  }
}